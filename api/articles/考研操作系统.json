{"title":"考研操作系统","slug":"考研操作系统","date":"2025-01-18T09:09:56.000Z","updated":"2025-01-19T08:11:55.063Z","comments":true,"path":"api/articles/考研操作系统.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"计算机系统概述\"><a href=\"#计算机系统概述\" class=\"headerlink\" title=\"计算机系统概述\"></a>计算机系统概述</h1><h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>计算机系统<strong>自下而上</strong>可以大致分为 4 部分：<strong>硬件</strong>、<strong>操作系统</strong>、<strong>应用程序</strong>和<strong>用户</strong>（这里的划分与计算机组成原理中的分层不同）。</li>\n<li>操作系统管理各种计算机硬件，为应用程序提供基础，并且充当计算机硬件与用户之间的中介。</li>\n<li><strong>硬件</strong>提供基本的计算资源，<strong>应用程序</strong>规定按何种方式使用这些资源来解决用户的计算问题，<strong>操作系统</strong>控制和协调各用户的应用程序对硬件的分配与使用。</li>\n<li><strong>操作系统</strong>（Operating System，OS）是指控制和管理整个计算机系统的硬件与软件资源，合理地组织、调度计算机的工作与资源的分配，进而为用户和其他软件提供方便接口与环境的程序集合。<u>操作系统是计算机系统中最基本的系统软件。</u></li>\n</ul>\n<h3 id=\"特征\"><a href=\"#特征\" class=\"headerlink\" title=\"特征\"></a>特征</h3><ul>\n<li>操作系统的基本特征包括<strong>并发</strong>、<strong>共享</strong>、<strong>虚拟</strong>和<strong>异步</strong>。</li>\n</ul>\n<ol>\n<li><strong>并发</strong>（Concurrence）</li>\n</ol>\n<ul>\n<li><strong>并发</strong>是指两个或多个事件在<strong>同一间间隔</strong>内发生。在多道程序环境下，在内存中同时装有若干道程序，以便当运行某道程序时，利用其因I/O操作而暂停执行时的CPU空档时间，再调度另一道程序运行，从而实现多道程序交替运行，使CPU保持忙碌状态。</li>\n<li><strong>并行性</strong>是指系统具有同时进行运算或操作的特性，在<strong>同一时刻</strong>能完成两种或两种以上的工作。</li>\n<li>操作系统的<strong>并发性</strong>是通过<strong>分时</strong>得以实现的。而CPU与I/O设备、I/O设备和I/O设备则能实现真正的并行。若要实现进程的并行则需要有相关硬件的支持，如多流水线或多处理机环境。</li>\n<li>在操作系统中，引入进程的目的是使程序能并发执行。</li>\n</ul>\n<ol>\n<li><strong>共享</strong>（Sharing）</li>\n</ol>\n<ul>\n<li>资源共享即共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。资源共享主要可分为<strong>互斥共享</strong>和<strong>同时访问</strong>两种方式。<br><strong>（1）互斥共享方式</strong></li>\n<li>当进程A访问某个资源时，必须先提出请求，若此时该资源空闲，则系统便将之分配给A使用，此后有其他进程也要访问该资源时（只要A未用完）就必须等待。仅当A访问完并释放该资源后，才允许另一个进程对该资源进行访问。我们将这种资源共享方式称为<strong>互斥共享</strong>，而将在一段时间内只允许一个进程访问的资源称为<strong>临界资源</strong>。计算机系统中的大多数物理设备及某些软件中所用的栈、变量和表格，都属于临界资源，它们都要求被互斥地共享。<br><strong>（2）同时访问方式</strong></li>\n<li>系统中还有另一类资源，这类资源允许在一段时间内由多个进程“同时”访问。这里所说地“同时”通常是宏观上的，而在微观上，这些进程可能是交替地对该资源进行访问即“分时共享”的。可供多个进程“同时”访问的典型资源是磁盘设备，一些用重入代码编写的文件也可被“同时”共享，即允许若干用户同时访问该文件。</li>\n<li>注意，互斥共享要求一种资源在一段时间内（哪怕是一段很短的时间）只能满足一个请求，否则就会出现严重的问题（比如打印机第一行打印文档A的内容，第二行打印文档B的内容），而同时访问共享通常要求一个请求分几个时间片段间隔地完成，其效果与连续完成的效果相同。</li>\n</ul>\n<blockquote>\n<p><strong>并发</strong>和<strong>共享</strong>是操作系统两个<u><strong>最基本</strong></u>的特征，两者之间互为存在的条件：<strong>①</strong> 资源共享是以的并发为条件的，若系统不允许程序并发执行，则自然不存在资源共享问题；<strong>②</strong> 若系统不能对资源共享实施有效的管理，则必将影响到程序的并发执行，甚至根本无法并发执行。</p>\n</blockquote>\n<ol>\n<li><strong>虚拟</strong>（Virtual）</li>\n</ol>\n<ul>\n<li><strong>虚拟</strong>是指将一个物理上的实体变为若干逻辑上的对应物。物理实体（前者）是实的，即实际存在的；而后者是虚的，是用户感觉上的事物。用于实现虚拟的技术称为<strong>虚拟技术</strong>。操作系统上的虚拟技术可归纳为：<strong>时分复用技术</strong>，如虚拟<u>处理</u>器；<strong>空分复用技术</strong>，如虚拟<u>存储</u>器。</li>\n<li><strong>虚拟处理器</strong>：通过多道程序设计技术，让多道程序并发执行，来分时使用一个处理器。此时，虽然只有一个处理器，但它能同时为多个用户服务，使每个终端用户都感觉有一个CPU在专门为它服务。利用多道程序设计技术将一个物理上的CPU虚拟为多个逻辑上的CPU，称为<strong>虚拟处理器</strong>。</li>\n<li><strong>虚拟存储器</strong>：采用虚拟存储器技术将一台机器的物理存储器变为虚拟存储器，以便从逻辑上扩充存储器的容量。当然，这时用户所感觉到的内存容量是虚的。我们将用户感觉到（但实际不存在）的存储器称为<strong>虚拟存储器</strong>。</li>\n<li>还可采用虚拟设备技术将一台物理I/O设备虚拟为多台逻辑上的I/O设备，并允许每个用户占用一台逻辑上的I/O设备，使原来仅允许在一段时间内由一个用户访问的设备（<strong>临界资源</strong>）变为在一段时间内允许多个用户同时访问的共享设备。</li>\n</ul>\n<ol>\n<li><strong>异步</strong>（Asynchronism）</li>\n</ol>\n<ul>\n<li>多道程序环境允许多个程序并发执行，但由于资源有限，进程的执行并不是一贯到底的，而是走走停停的，它以不可预知的速度向前推进，这就是进程的<strong>异步性</strong>。</li>\n<li>异步性使得操作系统运行在一种随机的环境下，可能导致进程产生与时间有关的错误（就像对全局变量的访问顺序不当会导致程序出错一样）。然而，只要运行环境相同，操作系统就须保证多次运行进程后都能获得相同的结果。</li>\n</ul>\n<h3 id=\"目标和功能\"><a href=\"#目标和功能\" class=\"headerlink\" title=\"目标和功能\"></a>目标和功能</h3><ul>\n<li>为了给多道程序提供良好的运行环境，操作系统应具有以下几方面的功能：<strong>处理机管理</strong>、<strong>存储器管理</strong>、<strong>设备管理</strong>和<strong>文件管理</strong>。为了方便用户使用操作系统，还必须向用户提供<strong>接口</strong>。同时，操作系统可用来<strong>扩充机器</strong>，以提供更方便的服务、更高的资源利用率。</li>\n</ul>\n<ol>\n<li><strong>操作系统作为计算机系统资源的管理者</strong><br><strong>（1）处理机管理</strong></li>\n</ol>\n<ul>\n<li>在多道程序环境下，处理机的分配和运行都以<strong>进程</strong>（或<strong>线程</strong>）为基本单位，因而对处理机的管理可归结为对进程的管理。</li>\n<li>并发是指在计算机内同时运行多个进程，因此进程何时创建、何时撤销、如何管理、如何避免冲突、合理共享就是进程管理的最主要的任务。</li>\n<li>进程管理的主要功能包括进程控制、进程同步、进程通信、死锁处理、处理机调度等。<br><strong>（2）存储器管理</strong></li>\n<li>存储器管理是为了给多道程序的运行提供良好的环境，方便用户使用及提高内存的利用率，主要包括内存分配与回收、地址映射、内存保护与共享和内存扩充等功能。<br><strong>（3）文件管理</strong></li>\n<li>计算机中的信息都是以文件的形式存在的，操作系统中负责文件管理的部分称为<strong>文件系统</strong>。</li>\n<li>文件管理包括文件存储空间的管理、目录管理及文件读写管理和保护等。<br><strong>（4）设备管理</strong></li>\n<li>设备管理的主要任务是完成用户的I/O请求，方便用户使用各种设备，并提高设备的利用率，主要包括缓冲管理、设备分配、设备处理和虚拟设备等功能。<blockquote>\n<p>这些工作都由操作系统负责，用户无须关注。</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li><strong>操作系统作为用户与计算机硬件系统之间的接口</strong></li>\n</ol>\n<ul>\n<li>为了让用户方便、快捷、可靠地操纵计算机硬件并运行自己的程序，操作系统还提供了用户接口。</li>\n<li>操作系统提供的接口主要分为两类：<br>一类是<strong>命令接口</strong>，用户利用这些操作命令来组织和控制作业的执行；<br>另一类是<strong>程序接口</strong>，编程人员可以使用它们来请求操作系统服务。<br><strong>（1）命令接口</strong></li>\n<li>使用命令接口进行<u>作业控制</u>的主要方式有两种，即<strong>联机控制方式</strong>和<strong>脱机控制方式</strong>。按作业控制方式的不同，可将命令接口分为<strong>联机命令接口</strong>和<strong>脱机命令接口</strong>。</li>\n<li><strong>联机命令接口</strong>又称<strong>交互式命令接口</strong>，适用于分时或实时系统的接口。它由一组键盘操作命令组成。用户通过控制台或终端输入操作命令，向系统提出各种服务要求。用户每输入一条命令，控制权就转给操作系统的命令解释程序，然后由命令解释程序解释并执行输入的命令，完成指定的功能。之后，控制权转回控制台或终端，此时用户又可输入下一条命令。</li>\n<li><strong>脱机命令接口</strong>又称<strong>批处理命令接口</strong>，适用于批处理系统，它由一组作业控制命令组成。脱机用户不能直接干预作业的运行，而应事先用相应的作业控制命令写成一份作业操作说明书，连同作业一起提交给系统。系统调度到该作业时，由系统中的命令解释程序逐条解释执行作业说明书上的命令，从而间接地控制作业的运行。<br><strong>（2）程序接口</strong></li>\n<li>程序接口由一组<strong>系统调用</strong>（也称<strong>广义指令</strong>）组成。用户通过在程序中使用这些系统调用来请求操作系统为其提供服务，如使用各种外部设备、申请分配和回收内存及其他各种要求。</li>\n<li>当前最流行的是图形用户界面（GUI），即图形接口。GUI最终是通过调用程序接口实现的，用户通过鼠标和键盘在图形界面上单击或使用快捷键，就能很方便地使用操作系统。严格来说，图形接口不是操作系统的一部分，但图形接口所调用的系统调用命令是操作系统的一部分。</li>\n</ul>\n<ol>\n<li><strong>操作系统实现了对计算机资源的扩充</strong></li>\n</ol>\n<ul>\n<li>没有任何软件支持的计算机称为<strong>裸机</strong>，它仅构成计算机系统的物质基础，而实际呈现在用户面前的计算机系统是经过若干层软件改造的计算机。裸机在最里层，其外面是操作系统。操作系统所提供的资源管理功能和方便用户的各种服务功能，将裸机改造成功能更强、使用更方便的机器；因此，我们通常将覆盖了软件的机器称为<strong>扩充机器</strong>或<strong>虚拟机</strong>。</li>\n</ul>\n<h2 id=\"发展历程\"><a href=\"#发展历程\" class=\"headerlink\" title=\"发展历程\"></a>发展历程</h2><h3 id=\"手工操作阶段（此阶段无操作系统）\"><a href=\"#手工操作阶段（此阶段无操作系统）\" class=\"headerlink\" title=\"手工操作阶段（此阶段无操作系统）\"></a>手工操作阶段（此阶段无操作系统）</h3><ul>\n<li>用户在计算机上算题的所有工作都要人工干预，如程序的装入、运行、结果的输出等。随着计算机硬件的发展，人机矛盾（速度和资源利用）越来越大，必须寻求新的解决办法。</li>\n<li>手工操作阶段有两个突出的<strong>缺点</strong>：<strong>①</strong> 用户独占全机，虽然不会出现因资源已被其他用户占用而等待的现象，但资源利用率低。<strong>②</strong> CPU等待手工操作，CPU的利用不充分。</li>\n<li>唯一的解决办法就是用高速的机器代替相对较慢的手工操作来对作业进行控制。</li>\n</ul>\n<h3 id=\"批处理阶段（操作系统开始出现）\"><a href=\"#批处理阶段（操作系统开始出现）\" class=\"headerlink\" title=\"批处理阶段（操作系统开始出现）\"></a>批处理阶段（操作系统开始出现）</h3><ul>\n<li>为了解决人机矛盾及CPU和I/O设备之间速度不匹配的矛盾，出现了批处理系统。按<strong>发展历程</strong>又分为<strong>单道批处理系统</strong>、<strong>多道批处理系统</strong>（多道程序色痕迹技术出现以后）。</li>\n</ul>\n<ol>\n<li><strong>单道批处理系统</strong></li>\n</ol>\n<ul>\n<li>为实现对作业的连续处理，需要先将一批作业以<strong>脱机方式</strong>输入磁带，并在系统中配上<strong>监督程序</strong>（Monitor），在其控制下，使这批作业能一个接一个地连续处理。虽然系统对作业的处理是成批进行的，但内存中始终保持一道作业。</li>\n<li>单道批处理系统的<strong>主要特征</strong>如下：<br>1) <strong>自动性。</strong>在顺利的情况下，磁带上的一批作业能自动地逐个运行，而无须人工干预。<br>2) <strong>顺序性。</strong>磁带上的各道作业顺序地进入内存，先调入内存的作业先完成。<br>3) <strong>单道性。</strong>内存中仅有一道程序运行，即监督程序每次从磁带上只调入一道程序进入内存运行，当该程序完成或发生异常情况时，才换入其后继程序进入内存运行。</li>\n</ul>\n<blockquote>\n<p>此时面临的问题是：每次主机内存中仅存放一道作业，每当它在运行期间（注意这里是“运行时”而不是“完成后”）发出输入/输出请求后，高速的CPU便处于等待低速的I/O完成的状态。为了进一步提高资源的利用率和系统的吞吐量，引入了多道程序技术。</p>\n</blockquote>\n<ol>\n<li><strong>多道批处理系统</strong></li>\n</ol>\n<ul>\n<li>用户所提交的作业都先存放在外存上并排成一个队列，作业调度程序按一定的算法从后备队列中选择若干作业调入内存，它们在管理程序的控制下相互穿插地运行，共享系统中的各种硬/软件资源。</li>\n<li>当某道程序因请求I/O操作而暂停运行时，CPU便立即转去运行另一道程序，这是通过<strong>中断机制</strong>实现的。它让系统的各个组成部分都尽量“忙”，切换任务所花费的时间很少，因而可实现系统各部件之间的并行工作，使其在单位时间内的效率翻倍。</li>\n<li><p>多道程序设计的<strong>特点</strong>是<strong>多道</strong>、<strong>宏观上并行</strong>、<strong>微观上串行</strong>。<br>1) <strong>多道。</strong>计算机内存中同时存放多道相互独立的程序。<br>2) <strong>宏观上并行。</strong>同时进入系统的多道程序都处于运行过程中，但都未运行完毕。<br>3) <strong>微观上串行。</strong>内存中的多道程序轮流占有CPU，交替执行。</p>\n</li>\n<li><p>多道程序设计技术的<strong>实现</strong>需要解决下列<strong>问题</strong>：<br>1) 如何分配处理器。<br>2) 多道程序的内存分配问题。<br>3) I/O设备如何分配。<br>4) 如何组织和存放大量的程序和数据，以方便用户使用并保证其安全性与一致性。</p>\n</li>\n<li><p>在批处理系统中采用多道程序设计技术就形成了多道批处理操作系统。该系统将用户提交的作业成批地送入计算机内存，然后由作业调度程序自动地选择作业运行。</p>\n</li>\n<li><strong>优点</strong>：资源利用率高，多道程序共享计算机资源，从而使各种资源得到充分利用；系统吞吐量大，CPU和其他资源保持“忙碌”状态。</li>\n<li><strong>缺点</strong>：用户响应的时间较长，不提供人机交互能力，用户既不能了解自己的程序的运行情况，又不能控制计算机。</li>\n</ul>\n","more":"<h1 id=\"计算机系统概述\"><a href=\"#计算机系统概述\" class=\"headerlink\" title=\"计算机系统概述\"></a>计算机系统概述</h1><h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>计算机系统<strong>自下而上</strong>可以大致分为 4 部分：<strong>硬件</strong>、<strong>操作系统</strong>、<strong>应用程序</strong>和<strong>用户</strong>（这里的划分与计算机组成原理中的分层不同）。</li>\n<li>操作系统管理各种计算机硬件，为应用程序提供基础，并且充当计算机硬件与用户之间的中介。</li>\n<li><strong>硬件</strong>提供基本的计算资源，<strong>应用程序</strong>规定按何种方式使用这些资源来解决用户的计算问题，<strong>操作系统</strong>控制和协调各用户的应用程序对硬件的分配与使用。</li>\n<li><strong>操作系统</strong>（Operating System，OS）是指控制和管理整个计算机系统的硬件与软件资源，合理地组织、调度计算机的工作与资源的分配，进而为用户和其他软件提供方便接口与环境的程序集合。<u>操作系统是计算机系统中最基本的系统软件。</u></li>\n</ul>\n<h3 id=\"特征\"><a href=\"#特征\" class=\"headerlink\" title=\"特征\"></a>特征</h3><ul>\n<li>操作系统的基本特征包括<strong>并发</strong>、<strong>共享</strong>、<strong>虚拟</strong>和<strong>异步</strong>。</li>\n</ul>\n<ol>\n<li><strong>并发</strong>（Concurrence）</li>\n</ol>\n<ul>\n<li><strong>并发</strong>是指两个或多个事件在<strong>同一间间隔</strong>内发生。在多道程序环境下，在内存中同时装有若干道程序，以便当运行某道程序时，利用其因I/O操作而暂停执行时的CPU空档时间，再调度另一道程序运行，从而实现多道程序交替运行，使CPU保持忙碌状态。</li>\n<li><strong>并行性</strong>是指系统具有同时进行运算或操作的特性，在<strong>同一时刻</strong>能完成两种或两种以上的工作。</li>\n<li>操作系统的<strong>并发性</strong>是通过<strong>分时</strong>得以实现的。而CPU与I/O设备、I/O设备和I/O设备则能实现真正的并行。若要实现进程的并行则需要有相关硬件的支持，如多流水线或多处理机环境。</li>\n<li>在操作系统中，引入进程的目的是使程序能并发执行。</li>\n</ul>\n<ol>\n<li><strong>共享</strong>（Sharing）</li>\n</ol>\n<ul>\n<li>资源共享即共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。资源共享主要可分为<strong>互斥共享</strong>和<strong>同时访问</strong>两种方式。<br><strong>（1）互斥共享方式</strong></li>\n<li>当进程A访问某个资源时，必须先提出请求，若此时该资源空闲，则系统便将之分配给A使用，此后有其他进程也要访问该资源时（只要A未用完）就必须等待。仅当A访问完并释放该资源后，才允许另一个进程对该资源进行访问。我们将这种资源共享方式称为<strong>互斥共享</strong>，而将在一段时间内只允许一个进程访问的资源称为<strong>临界资源</strong>。计算机系统中的大多数物理设备及某些软件中所用的栈、变量和表格，都属于临界资源，它们都要求被互斥地共享。<br><strong>（2）同时访问方式</strong></li>\n<li>系统中还有另一类资源，这类资源允许在一段时间内由多个进程“同时”访问。这里所说地“同时”通常是宏观上的，而在微观上，这些进程可能是交替地对该资源进行访问即“分时共享”的。可供多个进程“同时”访问的典型资源是磁盘设备，一些用重入代码编写的文件也可被“同时”共享，即允许若干用户同时访问该文件。</li>\n<li>注意，互斥共享要求一种资源在一段时间内（哪怕是一段很短的时间）只能满足一个请求，否则就会出现严重的问题（比如打印机第一行打印文档A的内容，第二行打印文档B的内容），而同时访问共享通常要求一个请求分几个时间片段间隔地完成，其效果与连续完成的效果相同。</li>\n</ul>\n<blockquote>\n<p><strong>并发</strong>和<strong>共享</strong>是操作系统两个<u><strong>最基本</strong></u>的特征，两者之间互为存在的条件：<strong>①</strong> 资源共享是以的并发为条件的，若系统不允许程序并发执行，则自然不存在资源共享问题；<strong>②</strong> 若系统不能对资源共享实施有效的管理，则必将影响到程序的并发执行，甚至根本无法并发执行。</p>\n</blockquote>\n<ol>\n<li><strong>虚拟</strong>（Virtual）</li>\n</ol>\n<ul>\n<li><strong>虚拟</strong>是指将一个物理上的实体变为若干逻辑上的对应物。物理实体（前者）是实的，即实际存在的；而后者是虚的，是用户感觉上的事物。用于实现虚拟的技术称为<strong>虚拟技术</strong>。操作系统上的虚拟技术可归纳为：<strong>时分复用技术</strong>，如虚拟<u>处理</u>器；<strong>空分复用技术</strong>，如虚拟<u>存储</u>器。</li>\n<li><strong>虚拟处理器</strong>：通过多道程序设计技术，让多道程序并发执行，来分时使用一个处理器。此时，虽然只有一个处理器，但它能同时为多个用户服务，使每个终端用户都感觉有一个CPU在专门为它服务。利用多道程序设计技术将一个物理上的CPU虚拟为多个逻辑上的CPU，称为<strong>虚拟处理器</strong>。</li>\n<li><strong>虚拟存储器</strong>：采用虚拟存储器技术将一台机器的物理存储器变为虚拟存储器，以便从逻辑上扩充存储器的容量。当然，这时用户所感觉到的内存容量是虚的。我们将用户感觉到（但实际不存在）的存储器称为<strong>虚拟存储器</strong>。</li>\n<li>还可采用虚拟设备技术将一台物理I/O设备虚拟为多台逻辑上的I/O设备，并允许每个用户占用一台逻辑上的I/O设备，使原来仅允许在一段时间内由一个用户访问的设备（<strong>临界资源</strong>）变为在一段时间内允许多个用户同时访问的共享设备。</li>\n</ul>\n<ol>\n<li><strong>异步</strong>（Asynchronism）</li>\n</ol>\n<ul>\n<li>多道程序环境允许多个程序并发执行，但由于资源有限，进程的执行并不是一贯到底的，而是走走停停的，它以不可预知的速度向前推进，这就是进程的<strong>异步性</strong>。</li>\n<li>异步性使得操作系统运行在一种随机的环境下，可能导致进程产生与时间有关的错误（就像对全局变量的访问顺序不当会导致程序出错一样）。然而，只要运行环境相同，操作系统就须保证多次运行进程后都能获得相同的结果。</li>\n</ul>\n<h3 id=\"目标和功能\"><a href=\"#目标和功能\" class=\"headerlink\" title=\"目标和功能\"></a>目标和功能</h3><ul>\n<li>为了给多道程序提供良好的运行环境，操作系统应具有以下几方面的功能：<strong>处理机管理</strong>、<strong>存储器管理</strong>、<strong>设备管理</strong>和<strong>文件管理</strong>。为了方便用户使用操作系统，还必须向用户提供<strong>接口</strong>。同时，操作系统可用来<strong>扩充机器</strong>，以提供更方便的服务、更高的资源利用率。</li>\n</ul>\n<ol>\n<li><strong>操作系统作为计算机系统资源的管理者</strong><br><strong>（1）处理机管理</strong></li>\n</ol>\n<ul>\n<li>在多道程序环境下，处理机的分配和运行都以<strong>进程</strong>（或<strong>线程</strong>）为基本单位，因而对处理机的管理可归结为对进程的管理。</li>\n<li>并发是指在计算机内同时运行多个进程，因此进程何时创建、何时撤销、如何管理、如何避免冲突、合理共享就是进程管理的最主要的任务。</li>\n<li>进程管理的主要功能包括进程控制、进程同步、进程通信、死锁处理、处理机调度等。<br><strong>（2）存储器管理</strong></li>\n<li>存储器管理是为了给多道程序的运行提供良好的环境，方便用户使用及提高内存的利用率，主要包括内存分配与回收、地址映射、内存保护与共享和内存扩充等功能。<br><strong>（3）文件管理</strong></li>\n<li>计算机中的信息都是以文件的形式存在的，操作系统中负责文件管理的部分称为<strong>文件系统</strong>。</li>\n<li>文件管理包括文件存储空间的管理、目录管理及文件读写管理和保护等。<br><strong>（4）设备管理</strong></li>\n<li>设备管理的主要任务是完成用户的I/O请求，方便用户使用各种设备，并提高设备的利用率，主要包括缓冲管理、设备分配、设备处理和虚拟设备等功能。<blockquote>\n<p>这些工作都由操作系统负责，用户无须关注。</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li><strong>操作系统作为用户与计算机硬件系统之间的接口</strong></li>\n</ol>\n<ul>\n<li>为了让用户方便、快捷、可靠地操纵计算机硬件并运行自己的程序，操作系统还提供了用户接口。</li>\n<li>操作系统提供的接口主要分为两类：<br>一类是<strong>命令接口</strong>，用户利用这些操作命令来组织和控制作业的执行；<br>另一类是<strong>程序接口</strong>，编程人员可以使用它们来请求操作系统服务。<br><strong>（1）命令接口</strong></li>\n<li>使用命令接口进行<u>作业控制</u>的主要方式有两种，即<strong>联机控制方式</strong>和<strong>脱机控制方式</strong>。按作业控制方式的不同，可将命令接口分为<strong>联机命令接口</strong>和<strong>脱机命令接口</strong>。</li>\n<li><strong>联机命令接口</strong>又称<strong>交互式命令接口</strong>，适用于分时或实时系统的接口。它由一组键盘操作命令组成。用户通过控制台或终端输入操作命令，向系统提出各种服务要求。用户每输入一条命令，控制权就转给操作系统的命令解释程序，然后由命令解释程序解释并执行输入的命令，完成指定的功能。之后，控制权转回控制台或终端，此时用户又可输入下一条命令。</li>\n<li><strong>脱机命令接口</strong>又称<strong>批处理命令接口</strong>，适用于批处理系统，它由一组作业控制命令组成。脱机用户不能直接干预作业的运行，而应事先用相应的作业控制命令写成一份作业操作说明书，连同作业一起提交给系统。系统调度到该作业时，由系统中的命令解释程序逐条解释执行作业说明书上的命令，从而间接地控制作业的运行。<br><strong>（2）程序接口</strong></li>\n<li>程序接口由一组<strong>系统调用</strong>（也称<strong>广义指令</strong>）组成。用户通过在程序中使用这些系统调用来请求操作系统为其提供服务，如使用各种外部设备、申请分配和回收内存及其他各种要求。</li>\n<li>当前最流行的是图形用户界面（GUI），即图形接口。GUI最终是通过调用程序接口实现的，用户通过鼠标和键盘在图形界面上单击或使用快捷键，就能很方便地使用操作系统。严格来说，图形接口不是操作系统的一部分，但图形接口所调用的系统调用命令是操作系统的一部分。</li>\n</ul>\n<ol>\n<li><strong>操作系统实现了对计算机资源的扩充</strong></li>\n</ol>\n<ul>\n<li>没有任何软件支持的计算机称为<strong>裸机</strong>，它仅构成计算机系统的物质基础，而实际呈现在用户面前的计算机系统是经过若干层软件改造的计算机。裸机在最里层，其外面是操作系统。操作系统所提供的资源管理功能和方便用户的各种服务功能，将裸机改造成功能更强、使用更方便的机器；因此，我们通常将覆盖了软件的机器称为<strong>扩充机器</strong>或<strong>虚拟机</strong>。</li>\n</ul>\n<h2 id=\"发展历程\"><a href=\"#发展历程\" class=\"headerlink\" title=\"发展历程\"></a>发展历程</h2><h3 id=\"手工操作阶段（此阶段无操作系统）\"><a href=\"#手工操作阶段（此阶段无操作系统）\" class=\"headerlink\" title=\"手工操作阶段（此阶段无操作系统）\"></a>手工操作阶段（此阶段无操作系统）</h3><ul>\n<li>用户在计算机上算题的所有工作都要人工干预，如程序的装入、运行、结果的输出等。随着计算机硬件的发展，人机矛盾（速度和资源利用）越来越大，必须寻求新的解决办法。</li>\n<li>手工操作阶段有两个突出的<strong>缺点</strong>：<strong>①</strong> 用户独占全机，虽然不会出现因资源已被其他用户占用而等待的现象，但资源利用率低。<strong>②</strong> CPU等待手工操作，CPU的利用不充分。</li>\n<li>唯一的解决办法就是用高速的机器代替相对较慢的手工操作来对作业进行控制。</li>\n</ul>\n<h3 id=\"批处理阶段（操作系统开始出现）\"><a href=\"#批处理阶段（操作系统开始出现）\" class=\"headerlink\" title=\"批处理阶段（操作系统开始出现）\"></a>批处理阶段（操作系统开始出现）</h3><ul>\n<li>为了解决人机矛盾及CPU和I/O设备之间速度不匹配的矛盾，出现了批处理系统。按<strong>发展历程</strong>又分为<strong>单道批处理系统</strong>、<strong>多道批处理系统</strong>（多道程序色痕迹技术出现以后）。</li>\n</ul>\n<ol>\n<li><strong>单道批处理系统</strong></li>\n</ol>\n<ul>\n<li>为实现对作业的连续处理，需要先将一批作业以<strong>脱机方式</strong>输入磁带，并在系统中配上<strong>监督程序</strong>（Monitor），在其控制下，使这批作业能一个接一个地连续处理。虽然系统对作业的处理是成批进行的，但内存中始终保持一道作业。</li>\n<li>单道批处理系统的<strong>主要特征</strong>如下：<br>1) <strong>自动性。</strong>在顺利的情况下，磁带上的一批作业能自动地逐个运行，而无须人工干预。<br>2) <strong>顺序性。</strong>磁带上的各道作业顺序地进入内存，先调入内存的作业先完成。<br>3) <strong>单道性。</strong>内存中仅有一道程序运行，即监督程序每次从磁带上只调入一道程序进入内存运行，当该程序完成或发生异常情况时，才换入其后继程序进入内存运行。</li>\n</ul>\n<blockquote>\n<p>此时面临的问题是：每次主机内存中仅存放一道作业，每当它在运行期间（注意这里是“运行时”而不是“完成后”）发出输入/输出请求后，高速的CPU便处于等待低速的I/O完成的状态。为了进一步提高资源的利用率和系统的吞吐量，引入了多道程序技术。</p>\n</blockquote>\n<ol>\n<li><strong>多道批处理系统</strong></li>\n</ol>\n<ul>\n<li>用户所提交的作业都先存放在外存上并排成一个队列，作业调度程序按一定的算法从后备队列中选择若干作业调入内存，它们在管理程序的控制下相互穿插地运行，共享系统中的各种硬/软件资源。</li>\n<li>当某道程序因请求I/O操作而暂停运行时，CPU便立即转去运行另一道程序，这是通过<strong>中断机制</strong>实现的。它让系统的各个组成部分都尽量“忙”，切换任务所花费的时间很少，因而可实现系统各部件之间的并行工作，使其在单位时间内的效率翻倍。</li>\n<li><p>多道程序设计的<strong>特点</strong>是<strong>多道</strong>、<strong>宏观上并行</strong>、<strong>微观上串行</strong>。<br>1) <strong>多道。</strong>计算机内存中同时存放多道相互独立的程序。<br>2) <strong>宏观上并行。</strong>同时进入系统的多道程序都处于运行过程中，但都未运行完毕。<br>3) <strong>微观上串行。</strong>内存中的多道程序轮流占有CPU，交替执行。</p>\n</li>\n<li><p>多道程序设计技术的<strong>实现</strong>需要解决下列<strong>问题</strong>：<br>1) 如何分配处理器。<br>2) 多道程序的内存分配问题。<br>3) I/O设备如何分配。<br>4) 如何组织和存放大量的程序和数据，以方便用户使用并保证其安全性与一致性。</p>\n</li>\n<li><p>在批处理系统中采用多道程序设计技术就形成了多道批处理操作系统。该系统将用户提交的作业成批地送入计算机内存，然后由作业调度程序自动地选择作业运行。</p>\n</li>\n<li><strong>优点</strong>：资源利用率高，多道程序共享计算机资源，从而使各种资源得到充分利用；系统吞吐量大，CPU和其他资源保持“忙碌”状态。</li>\n<li><strong>缺点</strong>：用户响应的时间较长，不提供人机交互能力，用户既不能了解自己的程序的运行情况，又不能控制计算机。</li>\n</ul>\n","categories":[],"tags":[]}