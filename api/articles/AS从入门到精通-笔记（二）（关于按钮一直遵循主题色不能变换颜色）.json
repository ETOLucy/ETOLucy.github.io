{"title":"AS从入门到精通-笔记（二）（关于按钮一直遵循主题色不能变换颜色）","slug":"AS从入门到精通-笔记（二）（关于按钮一直遵循主题色不能变换颜色）","date":"2023-10-11T02:53:54.000Z","updated":"2023-10-13T08:18:17.632Z","comments":true,"path":"api/articles/AS从入门到精通-笔记（二）（关于按钮一直遵循主题色不能变换颜色）.json","excerpt":null,"covers":["https://raw.githubusercontent.com/zstu21/image/main/img/AS/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%9B%BE%E7%A4%BA.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h2 id=\"AS第二节实验课\"><a href=\"#AS第二节实验课\" class=\"headerlink\" title=\"AS第二节实验课\"></a>AS第二节实验课</h2></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\"><a href=\"#如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\" class=\"headerlink\" title=\"如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\"></a>如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）</h3></div></div><div class='timeline-item-content'><p>昨晚搜了一整晚的博客，没找到适合我的AS体质的解决方案。有的说的是改主题，但怎么改都没用，最多是改变了下主题的默认颜色，但是按钮背景色还是遵循主题色；有的说改主题色，比如colorPrimary，colorSecondary之类的，但这还是不能让我自定义button颜色；还有的说用android:backgroundTint，但这个带Tint的好像是跟矢量资源相关的。<br>今早在YouTube上搜，有不少视频资源的，居然很快找到了解决方案，这个video也是最近发布的。<br>具体解决方案就是其他跟主题相关的都不用改，把<code>activity_main.xml</code>中的<code>Button</code>改成<code>androidx.appcompat.widget.AppCompatButton</code>就行。<br>就像这样：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">androidx.appcompat.widget.AppCompatButton</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/bt_CE&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;270px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;270px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;CE&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clickable</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">&quot;@style/CustomButtonStyle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textColor</span>=<span class=\"string\">&quot;@color/black&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<div class=\"note info modern\"><p>💡注：按钮自定义样式<code>style=&quot;@style/CustomButtonStyle&quot;</code>的介绍在下面。</p>\n</div>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"按钮自定义样式笔记\"><a href=\"#按钮自定义样式笔记\" class=\"headerlink\" title=\"按钮自定义样式笔记\"></a>按钮自定义样式笔记</h3></div></div><div class='timeline-item-content'><p>然后就是关于按钮自定义样式了，打算记一下笔记。<br>如上，这里<code>style=&quot;@style/CustomButtonStyle&quot;</code>的<code>CustomButtonStyle</code>需要定义一下。<br>可以在<code>themes.xml</code>中添加自定义的样式，也可以自己在<code>values</code>文件夹下添加一个<code>styles.xml</code>，如图：<br><img src=\"https://raw.githubusercontent.com/zstu21/image/main/img/AS/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%9B%BE%E7%A4%BA.jpg\" alt=\"文件夹图示\"><br>然后写上如下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;CustomButtonStyle&quot;</span> <span class=\"attr\">parent</span>=<span class=\"string\">&quot;android:Widget.Button&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;android:background&quot;</span>&gt;</span>@drawable/button_selector<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>对应的，我们需要在<code>@drawable</code>文件夹下创一个<code>selector</code>标签的文件，取名为<code>button_selector</code>，代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">&quot;@drawable/light_gray_bg&quot;</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">&quot;@drawable/dark_gray_bg&quot;</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>意思是按钮按下前是<code>@drawable/light_gray_bg</code>样式，按下后是<code>@drawable/dark_gray_bg</code>样式，然后我们分别写<code>@drawable</code>文件夹下的<code>light_gray_bg</code>和<code>dark_gray_bg</code>文件。<br><code>light_gray_bg</code>文件代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">&quot;rectangle&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">&quot;@color/light_gray&quot;</span> /&gt;</span> <span class=\"comment\">&lt;!-- 这里设置背景颜色 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>dark_gray_bg</code>文件代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">&quot;rectangle&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">&quot;@color/dark_gray&quot;</span> /&gt;</span> <span class=\"comment\">&lt;!-- 这里设置背景颜色 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div class=\"note info modern\"><p>💡注：这里的<code>@color/*</code>的介绍在下面。</p>\n</div>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"@color&#x2F;*\"></a>@color&#x2F;*</h3></div></div><div class='timeline-item-content'><p>在values文件夹下创建<code>colors.xml</code>，若以有请忽略（忘了新建项目时它是否自带了）。</p>\n<p>写上形如下的代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;black&quot;</span>&gt;</span>#FF000000<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;white&quot;</span>&gt;</span>#FFFFFFFF<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;light_gray&quot;</span>&gt;</span>#E6E6E6<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dark_gray&quot;</span>&gt;</span>#CFCFCF<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3></div></div><div class='timeline-item-content'><p>在<code>drawable</code>文件夹下放图片，然后引用的时候只写文件名，不要带扩展名。<br>代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:src</span>=<span class=\"string\">&quot;@drawable/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:ignore</span>=<span class=\"string\">&quot;MissingConstraints&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tip warning faa-horizontal animated-hover\"><p>这里有个关于文字可能被图片遮盖而无法显示的问题！</p>\n</div>\n在 XML 布局文件中，各个组件的顺序会影响它们在界面中的显示顺序以及布局层叠的顺序。\n\n<p>具体来说，后面声明的视图会叠放在前面声明的视图上方。这意味着如果两个视图有重叠部分，后面声明的视图会覆盖在前面声明的视图之上。</p>\n<p>比如以下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:src</span>=<span class=\"string\">&quot;@drawable/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:ignore</span>=<span class=\"string\">&quot;MissingConstraints&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/countdown_text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;0dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;100sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">&quot;184dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:gravity</span>=<span class=\"string\">&quot;center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textSize</span>=<span class=\"string\">&quot;80sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintEnd_toEndOf</span>=<span class=\"string\">&quot;@id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintHorizontal_bias</span>=<span class=\"string\">&quot;0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintStart_toStartOf</span>=<span class=\"string\">&quot;@id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintTop_toTopOf</span>=<span class=\"string\">&quot;@id/android&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>后声明的TextView会叠放在ImageView上方，也就是说文字显示在图片上放，不会被图片遮盖。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"帮室友debug之activity创建的问题\"><a href=\"#帮室友debug之activity创建的问题\" class=\"headerlink\" title=\"帮室友debug之activity创建的问题\"></a>帮室友debug之activity创建的问题</h3></div></div><div class='timeline-item-content'><p>室友是直接创建两个文件，一个.xml，一个.java，但是这样是不会被识别成activity的，只会被识别成一个普通的.xml文件。</p>\n<p>然后new了一个activity，AS给自动生成.xml和.java文件后，把原先的代码粘贴进去，就可以完美运作了。</p>\n<p>因此创建activity还是需要用new。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"名词理解-解释\"><a href=\"#名词理解-解释\" class=\"headerlink\" title=\"名词理解&amp;解释\"></a>名词理解&amp;解释</h3></div></div><div class='timeline-item-content'><h4 id=\"module\"><a href=\"#module\" class=\"headerlink\" title=\"module\"></a>module</h4><p>首先一个application可以new多个module（这个老师上课就一直在强调）。老师第一节实验课就说了，可以用new module的方法，这样我们之后需要多做几个app的时候就不需要疯狂地new projects了。</p>\n<h4 id=\"activity\"><a href=\"#activity\" class=\"headerlink\" title=\"activity\"></a>activity</h4><p>activity相当于是页面。官方点的解释是这样的：</p>\n<p>Activity 是 Android 应用程序中的一个核心组件，它代表了用户界面的一个单独屏幕或窗口。每个 Activity 都提供了一个用于与用户交互的界面，可以包括按钮、文本输入框、图像等。</p>\n<p>在 Android 应用程序中，通常会有多个 Activity，每个 Activity 负责处理不同的用户界面和交互逻辑。用户可以在这些 Activity 之间进行切换，从而让应用程序能够提供多个不同的功能。</p>\n<p>每个 Activity 都有一个生命周期（Lifecycle），包括以下主要阶段：</p>\n<ol>\n<li>创建阶段（onCreate）： Activity 第一次被创建时调用，通常在这里进行初始化操作。</li>\n<li>启动阶段（onStart）： Activity 可见但未获得用户焦点时调用。</li>\n<li>恢复阶段（onResume）： Activity 获得用户焦点时调用。</li>\n<li>暂停阶段（onPause）： Activity 失去用户焦点但仍然可见时调用，常用于释放资源。</li>\n<li>停止阶段（onStop）： Activity 不可见时调用。</li>\n<li>销毁阶段（onDestroy）： Activity 被销毁时调用，通常在这里进行资源释放。</li>\n<li>重新创建阶段（onRestart）： Activity 从停止状态重新启动时调用。</li>\n</ol>\n<p>Activity 之间可以通过 Intent 进行通信和切换，可以传递数据和启动其他 Activity。</p>\n<div class=\"note info modern\"><p>💡注：在 AndroidManifest.xml 文件中，需要在其中注册所有的 Activity，以便系统知道如何管理它们。</p>\n</div>\n\n<h4 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h4><p>Intent（意图）是在 Android 中用于在不同组件（如 Activity、Service、BroadcastReceiver 等）之间进行通信的一种机制。它用于描述应用程序中的一个操作，比如启动一个新的 Activity、启动一个 Service、发送一个广播等。</p>\n<p>“Intent” 这个单词在英语中表示一种意图、目的或者打算。在 Android 开发中，”Intent” 被用作一种通信机制，它表示了执行一个特定动作或者实现一个特定目的的意图。</p>\n<p>Intent 可以用来：</p>\n<ol>\n<li>启动组件： 通过 Intent 可以启动另一个 Activity、Service、BroadcastReceiver 或者 Content Provider。</li>\n<li>传递数据： 通过 Intent 可以在不同组件之间传递数据，比如字符串、整数、对象等。</li>\n<li>发起动作： 通过 Intent 可以发起某种动作，比如打开一个网页、拨打电话、发送邮件等。</li>\n<li>接收系统广播： 通过注册 BroadcastReceiver 并使用 IntentFilter，你可以接收系统发出的广播消息，比如网络状态变化、电池状态变化等。</li>\n</ol>\n<p>总的来说，Intent 是 Android 中实现组件之间通信和协作的重要机制，它能够将不同组件连接起来，实现复杂的应用逻辑。</p>\n<p>例如，你可以使用 Intent 启动一个新的 Activity，传递一些数据给它，然后在新的 Activity 中处理这些数据。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Intent</span> <span class=\"variable\">intent</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Intent</span>(MainActivity.<span class=\"built_in\">this</span>, SecondActivity.class);</span><br><span class=\"line\">intent.putExtra(<span class=\"string\">&quot;key&quot;</span>, <span class=\"string\">&quot;value&quot;</span>); <span class=\"comment\">// 传递数据</span></span><br><span class=\"line\">startActivity(intent); <span class=\"comment\">// 启动新的 Activity</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note modern\"><p class='p blue'>💡注：这里的`\"key\"`是用于在 Intent 中标识传递数据的唯一字符串。它用于在发送和接收数据时对数据进行标识和匹配。 当你使用 putExtra() 方法将数据放入 Intent 时，你需要提供一个字符串键（key）和对应的数值或者对象。这个键就是用来在接收端识别和获取对应数据的标识符。</p></div>\n\n<p>在 SecondActivity 中可以通过获取 Intent 中的数据来处理：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Intent</span> <span class=\"variable\">intent</span> <span class=\"operator\">=</span> getIntent();</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> intent.getStringExtra(<span class=\"string\">&quot;key&quot;</span>); <span class=\"comment\">// 获取传递的数据</span></span><br></pre></td></tr></table></figure>\n\n\n<p>总的来说，Intent 在 Android 开发中是非常重要的一个概念，它是实现组件之间通信的桥梁。</p>\n</div></div></div>","more":"<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h2 id=\"AS第二节实验课\"><a href=\"#AS第二节实验课\" class=\"headerlink\" title=\"AS第二节实验课\"></a>AS第二节实验课</h2></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\"><a href=\"#如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\" class=\"headerlink\" title=\"如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）\"></a>如何解决按钮一直不变换颜色，保持主题紫色的问题（2023年版本的AS）</h3></div></div><div class='timeline-item-content'><p>昨晚搜了一整晚的博客，没找到适合我的AS体质的解决方案。有的说的是改主题，但怎么改都没用，最多是改变了下主题的默认颜色，但是按钮背景色还是遵循主题色；有的说改主题色，比如colorPrimary，colorSecondary之类的，但这还是不能让我自定义button颜色；还有的说用android:backgroundTint，但这个带Tint的好像是跟矢量资源相关的。<br>今早在YouTube上搜，有不少视频资源的，居然很快找到了解决方案，这个video也是最近发布的。<br>具体解决方案就是其他跟主题相关的都不用改，把<code>activity_main.xml</code>中的<code>Button</code>改成<code>androidx.appcompat.widget.AppCompatButton</code>就行。<br>就像这样：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">androidx.appcompat.widget.AppCompatButton</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/bt_CE&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;270px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;270px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;CE&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clickable</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">&quot;@style/CustomButtonStyle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textColor</span>=<span class=\"string\">&quot;@color/black&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<div class=\"note info modern\"><p>💡注：按钮自定义样式<code>style=&quot;@style/CustomButtonStyle&quot;</code>的介绍在下面。</p>\n</div>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"按钮自定义样式笔记\"><a href=\"#按钮自定义样式笔记\" class=\"headerlink\" title=\"按钮自定义样式笔记\"></a>按钮自定义样式笔记</h3></div></div><div class='timeline-item-content'><p>然后就是关于按钮自定义样式了，打算记一下笔记。<br>如上，这里<code>style=&quot;@style/CustomButtonStyle&quot;</code>的<code>CustomButtonStyle</code>需要定义一下。<br>可以在<code>themes.xml</code>中添加自定义的样式，也可以自己在<code>values</code>文件夹下添加一个<code>styles.xml</code>，如图：<br><img src=\"https://raw.githubusercontent.com/zstu21/image/main/img/AS/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%9B%BE%E7%A4%BA.jpg\" alt=\"文件夹图示\"><br>然后写上如下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;CustomButtonStyle&quot;</span> <span class=\"attr\">parent</span>=<span class=\"string\">&quot;android:Widget.Button&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;android:background&quot;</span>&gt;</span>@drawable/button_selector<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>对应的，我们需要在<code>@drawable</code>文件夹下创一个<code>selector</code>标签的文件，取名为<code>button_selector</code>，代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">&quot;@drawable/light_gray_bg&quot;</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">&quot;@drawable/dark_gray_bg&quot;</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>意思是按钮按下前是<code>@drawable/light_gray_bg</code>样式，按下后是<code>@drawable/dark_gray_bg</code>样式，然后我们分别写<code>@drawable</code>文件夹下的<code>light_gray_bg</code>和<code>dark_gray_bg</code>文件。<br><code>light_gray_bg</code>文件代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">&quot;rectangle&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">&quot;@color/light_gray&quot;</span> /&gt;</span> <span class=\"comment\">&lt;!-- 这里设置背景颜色 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>dark_gray_bg</code>文件代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">&quot;rectangle&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">&quot;@color/dark_gray&quot;</span> /&gt;</span> <span class=\"comment\">&lt;!-- 这里设置背景颜色 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div class=\"note info modern\"><p>💡注：这里的<code>@color/*</code>的介绍在下面。</p>\n</div>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"@color&#x2F;*\"></a>@color&#x2F;*</h3></div></div><div class='timeline-item-content'><p>在values文件夹下创建<code>colors.xml</code>，若以有请忽略（忘了新建项目时它是否自带了）。</p>\n<p>写上形如下的代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;black&quot;</span>&gt;</span>#FF000000<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;white&quot;</span>&gt;</span>#FFFFFFFF<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;light_gray&quot;</span>&gt;</span>#E6E6E6<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dark_gray&quot;</span>&gt;</span>#CFCFCF<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3></div></div><div class='timeline-item-content'><p>在<code>drawable</code>文件夹下放图片，然后引用的时候只写文件名，不要带扩展名。<br>代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:src</span>=<span class=\"string\">&quot;@drawable/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:ignore</span>=<span class=\"string\">&quot;MissingConstraints&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tip warning faa-horizontal animated-hover\"><p>这里有个关于文字可能被图片遮盖而无法显示的问题！</p>\n</div>\n在 XML 布局文件中，各个组件的顺序会影响它们在界面中的显示顺序以及布局层叠的顺序。\n\n<p>具体来说，后面声明的视图会叠放在前面声明的视图上方。这意味着如果两个视图有重叠部分，后面声明的视图会覆盖在前面声明的视图之上。</p>\n<p>比如以下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:src</span>=<span class=\"string\">&quot;@drawable/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:ignore</span>=<span class=\"string\">&quot;MissingConstraints&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/countdown_text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;0dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;100sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">&quot;184dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:gravity</span>=<span class=\"string\">&quot;center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textSize</span>=<span class=\"string\">&quot;80sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintEnd_toEndOf</span>=<span class=\"string\">&quot;@id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintHorizontal_bias</span>=<span class=\"string\">&quot;0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintStart_toStartOf</span>=<span class=\"string\">&quot;@id/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:layout_constraintTop_toTopOf</span>=<span class=\"string\">&quot;@id/android&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>后声明的TextView会叠放在ImageView上方，也就是说文字显示在图片上放，不会被图片遮盖。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"帮室友debug之activity创建的问题\"><a href=\"#帮室友debug之activity创建的问题\" class=\"headerlink\" title=\"帮室友debug之activity创建的问题\"></a>帮室友debug之activity创建的问题</h3></div></div><div class='timeline-item-content'><p>室友是直接创建两个文件，一个.xml，一个.java，但是这样是不会被识别成activity的，只会被识别成一个普通的.xml文件。</p>\n<p>然后new了一个activity，AS给自动生成.xml和.java文件后，把原先的代码粘贴进去，就可以完美运作了。</p>\n<p>因此创建activity还是需要用new。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h3 id=\"名词理解-解释\"><a href=\"#名词理解-解释\" class=\"headerlink\" title=\"名词理解&amp;解释\"></a>名词理解&amp;解释</h3></div></div><div class='timeline-item-content'><h4 id=\"module\"><a href=\"#module\" class=\"headerlink\" title=\"module\"></a>module</h4><p>首先一个application可以new多个module（这个老师上课就一直在强调）。老师第一节实验课就说了，可以用new module的方法，这样我们之后需要多做几个app的时候就不需要疯狂地new projects了。</p>\n<h4 id=\"activity\"><a href=\"#activity\" class=\"headerlink\" title=\"activity\"></a>activity</h4><p>activity相当于是页面。官方点的解释是这样的：</p>\n<p>Activity 是 Android 应用程序中的一个核心组件，它代表了用户界面的一个单独屏幕或窗口。每个 Activity 都提供了一个用于与用户交互的界面，可以包括按钮、文本输入框、图像等。</p>\n<p>在 Android 应用程序中，通常会有多个 Activity，每个 Activity 负责处理不同的用户界面和交互逻辑。用户可以在这些 Activity 之间进行切换，从而让应用程序能够提供多个不同的功能。</p>\n<p>每个 Activity 都有一个生命周期（Lifecycle），包括以下主要阶段：</p>\n<ol>\n<li>创建阶段（onCreate）： Activity 第一次被创建时调用，通常在这里进行初始化操作。</li>\n<li>启动阶段（onStart）： Activity 可见但未获得用户焦点时调用。</li>\n<li>恢复阶段（onResume）： Activity 获得用户焦点时调用。</li>\n<li>暂停阶段（onPause）： Activity 失去用户焦点但仍然可见时调用，常用于释放资源。</li>\n<li>停止阶段（onStop）： Activity 不可见时调用。</li>\n<li>销毁阶段（onDestroy）： Activity 被销毁时调用，通常在这里进行资源释放。</li>\n<li>重新创建阶段（onRestart）： Activity 从停止状态重新启动时调用。</li>\n</ol>\n<p>Activity 之间可以通过 Intent 进行通信和切换，可以传递数据和启动其他 Activity。</p>\n<div class=\"note info modern\"><p>💡注：在 AndroidManifest.xml 文件中，需要在其中注册所有的 Activity，以便系统知道如何管理它们。</p>\n</div>\n\n<h4 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h4><p>Intent（意图）是在 Android 中用于在不同组件（如 Activity、Service、BroadcastReceiver 等）之间进行通信的一种机制。它用于描述应用程序中的一个操作，比如启动一个新的 Activity、启动一个 Service、发送一个广播等。</p>\n<p>“Intent” 这个单词在英语中表示一种意图、目的或者打算。在 Android 开发中，”Intent” 被用作一种通信机制，它表示了执行一个特定动作或者实现一个特定目的的意图。</p>\n<p>Intent 可以用来：</p>\n<ol>\n<li>启动组件： 通过 Intent 可以启动另一个 Activity、Service、BroadcastReceiver 或者 Content Provider。</li>\n<li>传递数据： 通过 Intent 可以在不同组件之间传递数据，比如字符串、整数、对象等。</li>\n<li>发起动作： 通过 Intent 可以发起某种动作，比如打开一个网页、拨打电话、发送邮件等。</li>\n<li>接收系统广播： 通过注册 BroadcastReceiver 并使用 IntentFilter，你可以接收系统发出的广播消息，比如网络状态变化、电池状态变化等。</li>\n</ol>\n<p>总的来说，Intent 是 Android 中实现组件之间通信和协作的重要机制，它能够将不同组件连接起来，实现复杂的应用逻辑。</p>\n<p>例如，你可以使用 Intent 启动一个新的 Activity，传递一些数据给它，然后在新的 Activity 中处理这些数据。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Intent</span> <span class=\"variable\">intent</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Intent</span>(MainActivity.<span class=\"built_in\">this</span>, SecondActivity.class);</span><br><span class=\"line\">intent.putExtra(<span class=\"string\">&quot;key&quot;</span>, <span class=\"string\">&quot;value&quot;</span>); <span class=\"comment\">// 传递数据</span></span><br><span class=\"line\">startActivity(intent); <span class=\"comment\">// 启动新的 Activity</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note modern\"><p class='p blue'>💡注：这里的`\"key\"`是用于在 Intent 中标识传递数据的唯一字符串。它用于在发送和接收数据时对数据进行标识和匹配。 当你使用 putExtra() 方法将数据放入 Intent 时，你需要提供一个字符串键（key）和对应的数值或者对象。这个键就是用来在接收端识别和获取对应数据的标识符。</p></div>\n\n<p>在 SecondActivity 中可以通过获取 Intent 中的数据来处理：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Intent</span> <span class=\"variable\">intent</span> <span class=\"operator\">=</span> getIntent();</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> intent.getStringExtra(<span class=\"string\">&quot;key&quot;</span>); <span class=\"comment\">// 获取传递的数据</span></span><br></pre></td></tr></table></figure>\n\n\n<p>总的来说，Intent 在 Android 开发中是非常重要的一个概念，它是实现组件之间通信的桥梁。</p>\n</div></div></div>","categories":[{"name":"移动应用开发","path":"api/categories/移动应用开发.json"}],"tags":[{"name":"笔记","path":"api/tags/笔记.json"},{"name":"安卓开发","path":"api/tags/安卓开发.json"},{"name":"Android Studio","path":"api/tags/Android Studio.json"},{"name":"bug & solution","path":"api/tags/bug & solution.json"}]}